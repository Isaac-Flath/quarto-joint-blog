---
title: Adding Subscriptions to a Quarto Site
subtitle: Subscribable Subscriptions
description: A no nonsense, to the point guide to implementing subscriptions in your Quarto site.
image: images/thumbnail.png
author:
  - Salman Naqvi
  - Isaac Flath
date: 2022-12-XX
categories: [Quarto, Collaboration]
toc: false
draft: true
open-graph:
  - description: A no nonsense, to the point guide to implementing subscriptions in your Quarto site.
  - image: images/thumbnail.png
twitter-card:
  - description: A no nonsense, to the point guide to implementing subscriptions in your Quarto site.
  - image: images/thumbnail.png
---

![](images/thumbnail.png)

The [Quarto Documenation](https://quarto.org/docs/websites/website-blog.html#subscriptions) covers how to implement website subscriptoins at a surface level. This guide goes into the details on how on could do so, with three different options. **That said**, this guide can also be helpful for sites that do not use Quarto.

The three ways this guide will cover:

* **Readymade Services**

  These are services that handle and automate everything for you. MailChimp is mentioned in the Quarto Docs as one option, but is not covered in this guide as it seems they are depracting the RSS email feed function which is necessary. Instead, we have found MailerLite to be a suitable alternative that is easy to setup and use.

* **Online Forms**

  Though more manual, it's good for just getting started or if you do not have an alternative address â€” many services like MailerLite require you to include a physical address in your emails. This options will dive into embedding forms, and gathering emails from there.

* **HTML/JS**

  For When you want to handle the frontend and the backend.

Switch between the tabs below to view the steps for each option.

::::{.panel-tabset}

# Services

The first thing we need to do is create a MailerLite Campaign.  That is what will actually send the email.

### MailerLite Campaign Setup

1. Make sure RSS feeds are enabled on your blog.  Instructions for how to do this are in [the Quarto Documentation](https://quarto.org/docs/websites/website-blog.html#rss-feed).
1. [Create a MailerLite account](https://www.mailerlite.com/signup).
1. Once you have an account and are logged in [Create an RSS Campaign](https://dashboard.mailerlite.com/campaigns/create).  You will need to fill in some information, including the URL of your RSS feed.  It should be a URL that ends with `.xml`.
1. On the content page, choose start from scratch (free tier) or select a template (paid) and design your email that will go out.
1. Select All Active Subscribers to send to. 
1. Continue through to schedule.


:::{.callout-important}
When you create an RSS campaign there are templates that can be used in the content tab for designing this email.  These are paid features that you get for free for the first 30 days.  Only use the templates if you intend to pay as they are not included in the free plan.
:::

:::{.callout-tip}

 You can create individual subscriber groups to have different campaigns go to different groups to give subscribers more options.  [Example here](https://isaac-flath.tech/blog.html).
 
:::

Now that the campaign is set up, we need to create the widget that allows users to subscribe to the blog.  In Quarto, this is defined in the `subscribe.html` file.

### Create subscribe.html

1. [Create an embedded form](https://dashboard.mailerlite.com/forms/create?type=embedded).
1. Use the GUI editor to style your embedded form!
1. Once you created the form it will take you to that forms `Overview` page.  Scroll down to look for the `Embed form into your website` section.
1. In that section select `HTML Code` and copy the code provided.
1. Create a paste this code into a `subscribe.html` file at the top level of your blog's directory.

### Modify _quarto.yml

Add the `subscribe.html` file to your `_quarto.yml` file by adding it to the `margin-header` attribute.  This option will look like this in your `_quarto.yml` file.

```yaml
website:
  # (additional metadata excluded for brevity)
  margin-header: subscribe.html
```

### Conclusion

That is all it takes to get subscriptions working on your blog with MailerLite!  Everything you just set up is editable so if you don't like how the email or the subscription widget looks, you can go in and edit your templates.


### Live example

Check out [Isaac Flath's blog](https://isaac-flath.tech) to see the MailerLite widget in action!

# Online Forms

Perhaps you don't have an alternative address. Or perhaps you just want something simple to get started with. There's still a way to implement blog
subscriptions! It requires more manual effort, but gets the job done: embedding online forms (e.g., Google Forms, Microsoft Forms, etc.).

It involves embedding a form in your website, collecting responses from it, creating a mailing list from those responses, and then composing and sending an email with the list.

The example in the steps below use Google Forms, though it would be very similar to Microsoft Forms. The steps below should also generally apply to any
other online forms service.

### Step 1: Create the form.

Using your online form provider of choice, create your form! A simple form would include a text box for inputting an email, with a simple check to see if
the entered email is valid.

![](images/1.png)

On Google Forms, you have an option to implement email checking with the following option.

![](images/2.png)

![](images/3.png)

:::{.callout-note appearance="simple"}
You may want to allow responses to be edited after submission, create a confirmation message, and disable a link to submit another response.

In Google Forms, these options can be toggled under the 'Settings' tab.
:::

### Step 2: Obtain the embed snippet.

Obtain the HTML snippet which you can paste into your website's source.

To do this, press send...

![](images/4.png)

...go to the embed tab...

![](images/5.png)

...and copy the snippet.

### Step 3: Embed the embed

Paste the snippet whereever you want to put the form on your site!

![](images/6.png)

You can adjust the size of the embed by tweaking these values.

![](images/7.png)

### Step 4: Unsubscribing.

Repeat steps 1-3 above and create a form that would allow subscribers to unsubscribe from receiving notifications. Make sure this form is clearly
accessible in your site.

### Step 5: Gathering emails.

Head to the responses tab of your form.

![](images/8.png)

You can take these email addresses and create a mailing list in the email service of your choice.

You can also download a CSV file containing the responses.

![](images/9.png)

Alternatively, you can also create a spreadsheet by clicking on the spreadsheet icon.

![](images/10.png)

![](images/11.png)

**At the same time,** check the responses in your unsubscribe form and tally them against the responses received in your subscribe form. Remove any email
addresses that need to be removed.

### Step 6: Compose and send!

Now compose the email how you would like to, and hit that send button!

:::{.callout-warning appearance="simple"}
# Before you hit that send button!
Make sure you include a clearly visible link in your email that would allow recipients to unsubscribe.
:::

### Step 0: Extras

:::{.callout-tip appearance="simple"}
You could combine the subscribe and unsubscribe forms into a single form so it would be easier to manage. The form would initially ask if a user would like
to subscribe or unsubscribe. Based on their input, the form would take them to the appropriate section.

Further expanding on this, if your site has multiple feeds, the form could also ask which feed the user would like to subscribe to or unsubscribe from.
:::

### Live example

Check out [Salman Naqvi's ForBlog](https://forbo7.github.io/forblog/) to see embedded forms in action!

# HTML & JS

## Option 3

Perhaps you know some HTML and JS, or even only JS, and don't have an alternative address. Instead of creating the frontend with HTML, try using the [Quarto
HTML Forms](https://github.com/jlgraves-ubc/forms) extension by [Jonathan Graves](https://github.com/jlgraves-ubc).

This extension allows you to implement HTML forms through [Quarto Shortcodes]() and YAML Options. However, you still will need to handle the backend with
JavaScript and perhaps a few other technologies. If you're interested in implementing it this way, you probably already know how to. If not, there are
plenty of great guides online!.

::::

## Acknowledgements

Thanks to Isaac Flath for collaborating with me on this guide! You can view his blog, works, and contact here [https://isaac-flath.tech](blog link).
